version: '3.6'
services:
 
  
  rasa:
    image: rasa/rasa:2.6.3-full
    volumes:
      - ./:/app
    command:
      - run
    ports:
        - 5005:5005
    networks:
            - lb_network
    deploy:
            mode: replicated
            replicas: 1
            labels:
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.rasa.rule=(Host(`process.action.bot`) && PathPrefix(`/`))
                #- traefik.http.routers.rasa.entrypoints=http
                #- traefik.http.routers.rasa.tls=true
                - traefik.http.services.rasa.loadbalancer.server.port=5005
  patbot:
    image: leonell147/action-server:v3
    expose: 
      - 5055
    container_name: action-server
  flask:
    image: leonell147/agiletalk:v2
    networks:
            - lb_network
    ports:
          - 5000:5000
    deploy:
            mode: replicated
            replicas: 1
            labels:
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.flask.rule=(Host(`sintetic.world`) && PathPrefix(`/`))
                #- traefik.http.routers.flask.entrypoints=http
                #- traefik.http.routers.flask.tls=true
                - traefik.http.services.flask.loadbalancer.server.port=5000
  traefik:
        image: traefik:v2.4.2
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
            restart_policy:
                condition: on-failure
                max_attempts: 3
                window: 120s
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /var/log/traefik:/var/log/traefik:rw
        command:
            - --providers.docker
            - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
            - --providers.docker.exposedbydefault=false
            - --providers.docker.swarmmode
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            - --serversTransport.insecureSkipVerify=true
            - --entryPoints.http.forwardedHeaders.trustedIPs=127.0.0.1/32,10.1.22.0/24
            #- --entryPoints.https.forwardedHeaders.trustedIPs=127.0.0.1/32,129.144.0.0/12,129.144.0.0/12,129.213.0.0/16,130.35.0.0/16,132.145.0.0/16,134.70.0.0/16,138.1.0.0/16,140.204.0.0/16,140.91.0.0/16,147.154.0.0/16,192.157.18.0/23,192.29.0.0/16,192.69.118.0/23,198.181.48.0/21,199.195.6.0/23,205.147.88.0/21
            #- --log.level=INFO
            - --accesslog
            - --api
            - --log
            - --log.filePath=/var/log/traefik/traefik.log
            - --accesslog.filepath=/var/log/traefik/access.log
            - --accesslog.filters.statuscodes=200-499
            - --accesslog.filters.retryattempts
            - --accesslog.filters.minduration=10ms
        networks:
            - lb_network
volumes:
  rasa:
    driver: s3fs
    name: "oci-rasa-$DEPLOY_ID"
  patbot:
    driver: s3fs
    name: "oci-patbot-$DEPLOY_ID"
  flask:
    driver: s3fs
    name: "oci-flask-$DEPLOY_ID"
networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  lb_network:
    external: true
